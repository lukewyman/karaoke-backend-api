service: karaoke-backend-perf-hist-api

package:
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, 'us-west-2'}
  stage: ${opt:stage, 'dev'}
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    PERFORMANCES_TABLE: Singers-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:UpdateItem
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.PERFORMANCES_TABLE}'

custom:
  webpack:
    webpackConfig: '../../webpack.config.js'
    packager: 'yarn'
    includeModules:
      nodeModulesRelativeDir: '../../'
  serverless-offline:
    httpPort: 3003
  dynamodb:
    start:
      port: 5000
      inMemory: true
      migrate: true
    stages:
      - dev

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

functions:
  addPerformance:
    handler: ./src/functions/KAR_HST_add_performance.handler
    events:
      - http:
          path: /karaoke/performance-history
          method: post
          cors: true
  getHistory:
    handler: ./src/functions/KAR_HST_get_history.handler
    events:
      - http:
          path: /karaoke/performance-history/{singerId}
          method: get
          cors: true

resources:
  Resources:
    performancesTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Delete
      Properties:
        TableName: ${self:provider.environment.PERFORMANCES_TABLE}
        AttributeDefinitions:
          - AttributeName: singerId
            AttributeType: S
          - AttributeName: performanceDate
            AttributeType: S
        KeySchema:
          - AttributeName: singerId
            KeyType: HASH
          - AttributeName: performanceDate
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
